process {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }

    maxRetries = 1
    maxErrors = '-1'

    // errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
    errorStrategy = 'retry' 
  
    // Process-specific resource requirements
    withName: split_ref_pan {
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    }
}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 16
  max_time = 120.h
}
